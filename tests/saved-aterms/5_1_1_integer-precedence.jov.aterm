Module(
  MainProgramModule(
    DeclarationList([])
  , Name("integerformula")
  , ProgramBody(
      DeclarationList([])
    , [ SimpleStatement(
          LabelList([])
        , AssignmentStatement(
            VariableList(["ivar"])
          , IntegerFormula(
              IntegerFormula(IntegerFormula(no-sign(), IntegerLiteral("1")), SubtractOp(), IntegerLiteral("2"))
            , AddOp()
            , IntegerLiteral("3")
            )
          )
        )
      , SimpleStatement(
          LabelList([])
        , AssignmentStatement(
            VariableList(["ivar"])
          , IntegerFormula(
              IntegerFormula(IntegerFormula(no-sign(), IntegerLiteral("1")), AddOp(), IntegerLiteral("2"))
            , SubtractOp()
            , IntegerLiteral("3")
            )
          )
        )
      , SimpleStatement(
          LabelList([])
        , AssignmentStatement(
            VariableList(["ivar"])
          , IntegerFormula(
              IntegerFormula(no-sign(), IntegerTerm(IntegerLiteral("1"), MultiplyOp(), IntegerLiteral("2")))
            , AddOp()
            , IntegerLiteral("3")
            )
          )
        )
      , SimpleStatement(
          LabelList([])
        , AssignmentStatement(
            VariableList(["ivar"])
          , IntegerFormula(
              IntegerFormula(no-sign(), IntegerLiteral("1"))
            , SubtractOp()
            , IntegerTerm(IntegerLiteral("2"), DivideOp(), IntegerLiteral("3"))
            )
          )
        )
      , SimpleStatement(
          LabelList([])
        , AssignmentStatement(
            VariableList(["ivar"])
          , IntegerFormula(
              IntegerFormula(MINUS(), IntegerTerm(IntegerLiteral("1"), ModOp(), IntegerLiteral("2")))
            , AddOp()
            , IntegerLiteral("3")
            )
          )
        )
      , SimpleStatement(
          LabelList([])
        , AssignmentStatement(
            VariableList(["ivar"])
          , IntegerFormula(
              IntegerFormula(MINUS(), IntegerLiteral("1"))
            , SubtractOp()
            , IntegerTerm(IntegerLiteral("2"), ModOp(), IntegerLiteral("3"))
            )
          )
        )
      , SimpleStatement(
          LabelList([])
        , AssignmentStatement(
            VariableList(["ivar"])
          , IntegerFormula(
              IntegerFormula(no-sign(), ExponentiationOp(IntegerLiteral("1"), IntegerLiteral("2")))
            , AddOp()
            , IntegerTerm(IntegerLiteral("3"), MultiplyOp(), IntegerLiteral("4"))
            )
          )
        )
      , SimpleStatement(
          LabelList([])
        , AssignmentStatement(
            VariableList(["ivar"])
          , IntegerFormula(
              IntegerFormula(no-sign(), IntegerLiteral("1"))
            , AddOp()
            , IntegerTerm(
                ExponentiationOp(IntegerLiteral("2"), IntegerLiteral("3"))
              , MultiplyOp()
              , IntegerLiteral("4")
              )
            )
          )
        )
      , SimpleStatement(
          LabelList([])
        , AssignmentStatement(
            VariableList(["ivar"])
          , IntegerFormula(
              IntegerFormula(no-sign(), IntegerLiteral("1"))
            , AddOp()
            , IntegerTerm(
                IntegerTerm(
                  ExponentiationOp(IntegerLiteral("2"), IntegerLiteral("3"))
                , MultiplyOp()
                , IntegerLiteral("4")
                )
              , DivideOp()
              , IntegerLiteral("5")
              )
            )
          )
        )
      , SimpleStatement(
          LabelList([])
        , AssignmentStatement(
            VariableList(["ivar"])
          , IntegerFormula(
              IntegerFormula(no-sign(), IntegerTerm(IntegerLiteral("1"), MultiplyOp(), IntegerLiteral("2")))
            , AddOp()
            , IntegerTerm(
                ExponentiationOp(IntegerLiteral("3"), IntegerLiteral("4"))
              , MultiplyOp()
              , IntegerLiteral("5")
              )
            )
          )
        )
      , SimpleStatement(
          LabelList([])
        , AssignmentStatement(
            VariableList(["ivar"])
          , IntegerFormula(
              IntegerFormula(no-sign(), ExponentiationOp(IntegerLiteral("1"), IntegerLiteral("2")))
            , SubtractOp()
            , IntegerTerm(
                IntegerLiteral("3")
              , DivideOp()
              , ExponentiationOp(IntegerLiteral("4"), IntegerLiteral("5"))
              )
            )
          )
        )
      ]
    , []
    , LabelList([])
    )
  , NonNestedSubroutineList([])
  )
)
